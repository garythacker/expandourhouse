{"version":3,"sources":["Alerts.js","utils.js","congressNbrToStyleId.js","Map.js","App.js","serviceWorker.js","index.js"],"names":["ShowErrors","Component","contents","errors","this","props","length","items","i","push","key","className","role","ordinal","number","suffix","suffixes","A","mapboxgl","accessToken","Map","state","congressStartYear","undefined","handleMapClick","bind","congress","CONGRESS_NBR_TO_STYLE_ID","console","log","map","setStyle","styleUrlForCongress","container","mapContainer","style","on","clearStorage","loadMap","remove","prevProps","e","features","queryRenderedFeatures","point","layers","feature","districtTitle","properties","titleLong","turnout","coords","geometry","coordinates","slice","Math","abs","lngLat","lng","html","toString","replace","Popup","setLngLat","setHTML","addTo","display","flexDirection","alignItems","margin","height","ref","el","textAlign","marginBottom","App","sortedCongressNbrs","_","sortBy","keys","n","parseInt","handleSelectCongress","event","newCongress","target","value","setState","pickerOpts","picker","onChange","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+RAoDMA,GAjDoBC,Y,uKAmDtB,IAEIC,EAFEC,EAASC,KAAKC,MAAMF,OAASC,KAAKC,MAAMF,OAAS,GAGvD,GAAsB,IAAlBA,EAAOG,OACT,OAAO,KAEJ,GAAsB,IAAlBH,EAAOG,OACdJ,EAAWC,EAAO,OAEf,CAEH,IADA,IAAMI,EAAQ,GACLC,EAAI,EAAGA,EAAIL,EAAOG,SAAUE,EACnCD,EAAME,KAAK,wBAAIC,IAAKF,GAAIL,EAAOK,KAEjCN,EAAY,wBAAIS,UAAU,aAAaJ,GAGzC,OACE,yBAAKI,UAAU,qBAAqBC,KAAK,SACtCV,O,GArBgBD,cCnDzB,SAASY,EAAQC,GACb,GAAIA,EAAS,EACX,KAAM,8BAER,IACIC,EADEC,EAAW,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAQxE,OALED,EADID,EAAS,MAAS,IAASA,EAAS,MAAS,IAASA,EAAS,MAAS,GACnEE,EAAS,GAGTA,EAASF,EAAS,IAEvB,GAAN,OAAUA,GAAV,OAAmBC,GCZf,IACeE,EADL,CAAC,EAAI,4BAA4B,EAAI,4BAA4B,EAAI,4BAA4B,EAAI,4BAA4B,EAAI,4BAA4B,EAAI,4BAA4B,EAAI,4BAA4B,EAAI,4BAA4B,EAAI,4BAA4B,GAAK,4BAA4B,GAAK,4BAA4B,GAAK,4BAA4B,GAAK,4BAA4B,GAAK,4BAA4B,GAAK,4BAA4B,GAAK,4BAA4B,GAAK,4BAA4B,GAAK,4BAA4B,GAAK,4BAA4B,GAAK,6BCOloBC,IAASC,YAFY,6F,IAcfC,E,kDACF,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IAEDgB,MAAQ,CACTC,uBAAmBC,EACnBpB,OAAQ,IAGZ,EAAKqB,eAAiB,EAAKA,eAAeC,KAApB,gBARP,E,gEAWCC,GAChB,MAAO,4BACHC,EAAyB,GAAKD,K,gCAIlCE,QAAQC,IAAI,gBAAkBzB,KAAKC,MAAMqB,UACpCtB,KAAKC,MAAMqB,WAGXtB,KAAK0B,IAON1B,KAAK0B,IAAIC,SAAS3B,KAAK4B,oBAAoB5B,KAAKC,MAAMqB,YANtDtB,KAAK0B,IAAM,IAAIZ,IAASE,IAAI,CACxBa,UAAW7B,KAAK8B,aAChBC,MAAO/B,KAAK4B,oBAAoB5B,KAAKC,MAAMqB,YAE/CtB,KAAK0B,IAAIM,GAAG,QAAShC,KAAKoB,oB,0CAO9BN,IAASmB,eACTjC,KAAKkC,Y,6CAIDlC,KAAK0B,KACL1B,KAAK0B,IAAIS,W,yCAIEC,GACfZ,QAAQC,IAAIzB,KAAKC,OACjBuB,QAAQC,IAAI,sBAAwBzB,KAAKC,MAAMqB,SAAW,IAAMc,EAAUd,UACtEtB,KAAKC,MAAMqB,WAAac,EAAUd,UAGtCtB,KAAKkC,Y,qCAGMG,GAEX,IAAMC,EAAWtC,KAAK0B,IAAIa,sBACtBF,EAAEG,MACF,CAAEC,OAAQ,CAAC,oBAAqB,qBAGpC,GADAjB,QAAQC,IAAIa,GACY,IAApBA,EAASpC,OAAb,CAGA,IAAMwC,EAAUJ,EAAS,GACzBd,QAAQC,IAAI,YACZD,QAAQC,IAAIiB,GAGZ,IAAMC,EAAgBD,EAAQE,WAAWC,UACnCC,EAAUJ,EAAQE,WAAWE,QAEnC,GAAKA,EAAL,CAQA,IADA,IAAMC,EAASL,EAAQM,SAASC,YAAYC,QACrCC,KAAKC,IAAIf,EAAEgB,OAAOC,IAAMP,EAAO,IAAM,KACxCA,EAAO,IAAMV,EAAEgB,OAAOC,IAAMP,EAAO,GAAK,KAAO,IAInD,IAAMQ,EAAI,+DAGJZ,EAHI,6GAMqDG,EAnG1DU,WAAWC,QAAQ,wBAAyB,KA6FvC,iEAUV,IAAI3C,IAAS4C,OACRC,UAAUtB,EAAEgB,QACZO,QAAQL,GACRM,MAAM7D,KAAK0B,S,+BAGV,IAAD,OAiBL,OACI,6BACI,kBAAC,EAAD,CAAY3B,OAAQC,KAAKiB,MAAMlB,SAC/B,yBAAKgC,MAnBU,CACnB+B,QAAS,OACTC,cAAe,SACfC,WAAY,UACZC,OAAQ,QAgBA,4BAAQlC,MAdH,CAEbmC,OAAQ,QACRD,OAAQ,GAWyBE,IAAK,SAAAC,GAAE,OAAI,EAAKtC,aAAesC,IACpD,gCAAYrC,MAVP,CACjBsC,UAAW,SACXC,aAAc,QASG7D,EAAQT,KAAKC,MAAMqB,UADxB,cAhIQ,KAGK,GA8HmDtB,KAAKC,MAAMqB,SA9HlD,GA6HzB,Y,GA1HNzB,aCuBH0E,G,wDAnCb,WAAYtE,GAAQ,IAAD,8BACjB,cAAMA,IAEDuE,mBACHC,IAAEC,OAAOD,IAAEE,KAAKpD,GAA0BG,KAAI,SAAAkD,GAAC,OAAIC,SAASD,OAE9D,EAAK3D,MAAQ,CAACK,SAAU,EAAKkD,mBAAmB,IAEhD,EAAKM,qBAAuB,EAAKA,qBAAqBzD,KAA1B,gBARX,E,iEAWE0D,GACnB,IAAMC,EAAcH,SAASE,EAAME,OAAOC,OAC1ClF,KAAKmF,SAAS,CAAC7D,SAAU0D,M,+BAIzB,IAAMI,EAAapF,KAAKwE,mBAAmB9C,KAAI,SAAAkD,GAC7C,OAAQ,4BAAQtE,IAAKsE,EAAGM,MAAON,GAAInE,EAAQmE,GAAnC,gBAEJS,EACJ,4BAAQH,MAAOlF,KAAKiB,MAAMK,SAAUgE,SAAUtF,KAAK8E,sBAChDM,EADH,KAKF,OACE,yBAAK7E,UAAU,OACZ8E,EACD,kBAAC,EAAD,CAAK/D,SAAUtB,KAAKiB,MAAMK,gB,GA9BhBzB,cCKE0F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.48b48bcb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ShowSuccess extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      message: undefined,\n      visible: true,\n    };\n  }\n\n  show(message) {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n\n    this.setState({\n      message: message,\n      visible: true,\n    });\n    this.timer = setInterval(\n      () => {this.setState({visible: false});},\n      10000\n    );\n  }\n\n  componentWillUnmount() {\n    if (this.timer) {\n      clearInterval(this.timer);\n      this.timer = undefined;\n    }\n  }\n\n  render() {\n    if (!this.state.visible || !this.state.message) {\n      return null;\n    }\n\n    return (\n      <div className=\"alert alert-success\" role=\"alert\">\n        {this.state.message}\n      </div>\n    );\n  }\n}\n\nconst showErrorsPropTypes = {\n  errors: PropTypes.array,\n};\n\nclass ShowErrors extends Component {\n  render() {\n    const errors = this.props.errors ? this.props.errors : [];\n\n    var contents;\n    if (errors.length === 0) {\n      return null;\n    }\n    else if (errors.length === 1) {\n      contents = errors[0];\n    }\n    else {\n      const items = [];\n      for (var i = 0; i < errors.length; ++i) {\n        items.push(<li key={i}>{errors[i]}</li>);\n      }\n      contents = (<ul className=\"pl-0 mb-0\">{items}</ul>);\n    }\n\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        {contents}\n      </div>\n    );\n  }\n}\n\nShowErrors.propTypes = showErrorsPropTypes;\n\nfunction getAxiosErrors(err) {\n  if (err.response) {\n    const data = err.response.data;\n    if (!data) {\n      return ['Unknown error'];\n    }\n    else if (typeof data === 'object' && data.jsonSchemaValidation) {\n      const errors = [];\n      const validations = data.validations.body;\n      for (var i = 0; i < validations.length; ++i) {\n        const v = validations[i];\n        const prop = v.property.split('.')[2];\n        const msg = `${prop} ${v.messages[0]}`;\n        errors.push(msg);\n      }\n      return errors;\n    }\n    else {\n      return ['' + err.response.data];\n    }\n  }\n  else if (err.request) {\n    /* No response was received. */\n    return ['Backend timeout'];\n  }\n  else {\n    return [err.message];\n  }\n}\n\nexport {ShowSuccess, ShowErrors, getAxiosErrors};\n","// turns 1 into '1st', etc.\nfunction ordinal(number) {\n    if (number < 0) {\n      throw 'Ordinal got negative number';\n    }\n    const suffixes = ['th', 'st', 'nd', 'rd', 'th', 'th', 'th', 'th', 'th', 'th'];\n    var suffix;\n    if (((number % 100) === 11) || ((number % 100) === 12) || ((number % 100) === 13)) {\n      suffix = suffixes[0];\n    }\n    else {\n      suffix = suffixes[number % 10];\n    }\n    return `${number}${suffix}`;\n}\n\nexport {ordinal};","/* Generated by get-styles.js */\n        const A = {\"1\":\"ckb1j8ym909hp1irt308gktqg\",\"2\":\"ckb1j90a809ds1iqp5p7icjk5\",\"3\":\"ckb1j92dl09fw1ilmujbc7u4p\",\"4\":\"ckb1j94c609go1jtepq1pdtj9\",\"5\":\"ckb1j96cp099n1iryslfa390l\",\"6\":\"ckb1j97zu09fg1ipc8vxco2gq\",\"7\":\"ckb1j6pbx09gh1imy1xeu5bsh\",\"8\":\"ckb1j9b8609j21imyz66qe6ls\",\"9\":\"ckb1j7we509fa1ins5yai2dj4\",\"10\":\"ckb1lfj850bl81iti5waj252x\",\"11\":\"ckb1lfibh0bfn1iryc3ol6le3\",\"12\":\"ckb1lfik20bk71ilm6i1hsgx2\",\"13\":\"ckb1lfikm07np1gmv1pql1rp0\",\"14\":\"ckb1lfinn0bl51iob1se9spsg\",\"15\":\"ckb1lfi070bjh1inteaouqkau\",\"16\":\"ckb1lfivq0bhh1inrnkgcyzlt\",\"17\":\"ckb1lfiwu0bm31ilidpff89g1\",\"18\":\"ckb1lfhr90bk51ilmabj8do8t\",\"19\":\"ckb1lfiba0bk61ilmnfwu820u\",\"20\":\"ckb1lfhv50bma1insoiwig3yj\"};\n        export default A;","import React, { Component } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport {ShowErrors} from './Alerts';\nimport {ordinal} from './utils.js';\nimport CONGRESS_NBR_TO_STYLE_ID from './congressNbrToStyleId';\n\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoiZHNoZWFyZXIiLCJhIjoiY2syam1qaThuMTEzazNsbnZxNHhidnZqcyJ9.Q0wOV0EePfEaRyw1oEK3UA';\n\nmapboxgl.accessToken = MAPBOX_TOKEN;\n\nfunction numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nconst gFirstCongressStartYear = 1789;\n\nfunction congressStartYear(congress) {\n    return gFirstCongressStartYear + 2*(congress-1);\n}\n\nclass Map extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            congressStartYear: undefined,\n            errors: [],\n        };\n\n        this.handleMapClick = this.handleMapClick.bind(this);\n    }\n\n    styleUrlForCongress(congress) {\n        return 'mapbox://styles/dshearer/' +\n            CONGRESS_NBR_TO_STYLE_ID['' + congress];\n    }\n\n    loadMap() {\n        console.log(\"Loading map: \" + this.props.congress);\n        if (!this.props.congress) {\n            return;\n        }\n        if (!this.map) {\n            this.map = new mapboxgl.Map({\n                container: this.mapContainer,\n                style: this.styleUrlForCongress(this.props.congress),\n            });\n            this.map.on('click', this.handleMapClick);\n        } else {\n            this.map.setStyle(this.styleUrlForCongress(this.props.congress));\n        }\n    }\n\n    componentDidMount() {\n        mapboxgl.clearStorage();\n        this.loadMap();\n    }\n\n    componentWillUnmount() {\n        if (this.map) {\n            this.map.remove();\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        console.log(this.props);\n        console.log('componentDidUpdate ' + this.props.congress + ' ' + prevProps.congress);\n        if (this.props.congress === prevProps.congress) {\n            return;\n        }\n        this.loadMap();\n    }\n\n    handleMapClick(e) {\n        // get features at click location from district layers\n        const features = this.map.queryRenderedFeatures(\n            e.point,\n            { layers: [\"irreg-district-bg\", \"reg-district-bg\"]},\n        );\n        console.log(features);\n        if (features.length === 0) {\n            return;\n        }\n        const feature = features[0];\n        console.log('feature:');\n        console.log(feature);\n\n        // get clicked district\n        const districtTitle = feature.properties.titleLong;\n        const turnout = feature.properties.turnout;\n\n        if (!turnout) {\n            return;\n        }\n\n        // Ensure that if the map is zoomed out such that multiple\n        // copies of the feature are visible, the popup appears\n        // over the copy being pointed to.\n        const coords = feature.geometry.coordinates.slice();\n        while (Math.abs(e.lngLat.lng - coords[0]) > 180) {\n            coords[0] += e.lngLat.lng > coords[0] ? 360 : -360;\n        }\n\n        // make popup\n        const html = `\n        <aside>\n            <header>\n            ${districtTitle}\n            </header>\n            <table>\n                <tr><th scope=\"row\">Turnout</th><td>${numberWithCommas(turnout)}</td></tr>\n            </table>\n        </aside>\n        `;\n        new mapboxgl.Popup()\n            .setLngLat(e.lngLat)\n            .setHTML(html)\n            .addTo(this.map);\n    }\n\n    render() {\n        const containerStyle = {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'stretch',\n            margin: '2em',\n        };\n        const mapStyle = {\n            // width: '1000px',\n            height: '600px',\n            margin: 0,\n        };\n        const captionStyle = {\n            textAlign: 'center',\n            marginBottom: '1em',\n        };\n\n        return (\n            <div>\n                <ShowErrors errors={this.state.errors} />\n                <div style={containerStyle}>\n                    <figure style={mapStyle} ref={el => this.mapContainer = el}>\n                        <figcaption style={captionStyle}>\n                            {ordinal(this.props.congress)} Congress ({congressStartYear(this.props.congress)})\n                        </figcaption>\n                    </figure>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport {Map};","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport {Map} from './Map.js';\nimport CONGRESS_NBR_TO_STYLE_ID from './congressNbrToStyleId';\nimport {ordinal} from './utils.js';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sortedCongressNbrs = \n      _.sortBy(_.keys(CONGRESS_NBR_TO_STYLE_ID).map(n => parseInt(n)));\n\n    this.state = {congress: this.sortedCongressNbrs[0]};\n\n    this.handleSelectCongress = this.handleSelectCongress.bind(this);\n  }\n\n  handleSelectCongress(event) {\n    const newCongress = parseInt(event.target.value);\n    this.setState({congress: newCongress});\n  }\n\n  render() {\n    const pickerOpts = this.sortedCongressNbrs.map(n => {\n      return (<option key={n} value={n}>{ordinal(n)} Congress</option>);\n    });\n    const picker = (\n      <select value={this.state.congress} onChange={this.handleSelectCongress}>\n        {pickerOpts}}\n      </select>\n    );\n\n    return (\n      <div className=\"App\">\n        {picker}\n        <Map congress={this.state.congress} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}